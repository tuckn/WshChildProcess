{
  "name": "@tuckn/WshChildProcess",
  "description": "This module provides the ability to spawn child processes (similar to Node.js Child-Process).",
  "version": "2.0.0",
  "author": "Tuckn <tuckn333@gmail.com>",
  "private": false,
  "license": "MIT",
  "homepage": "https://docs.tuckn.net/WshChildProcess",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tuckn/WshChildProcess.git"
  },
  "bugs": {
    "url": "https://github.com/tuckn/WshChildProcess/issues"
  },
  "keywords": [
    "Windows",
    "WSH",
    "WSF",
    "JScript",
    "VBScript",
    "module",
    "process"
  ],
  "files": [
    "dist"
  ],
  "main": "./dist/bundle.js",
  "bin": {},
  "scripts": {
    "install:WshJest": "git submodule add https://github.com/tuckn/WshJest.git ./WshModules/WshJest",
    "install:WshProcess": "git submodule add https://github.com/tuckn/WshProcess.git ./WshModules/WshProcess",
    "installModules": "run-s install:*",
    "updateModules": "git submodule update --remote",
    "ncu:checkUpdate": "npx npm-check-updates",
    "ncu:upgrade": "npx npm-check-updates --upgrade",
    "fix:eslint": "npm run lint:eslint -- --fix",
    "fix:prettier": "npm run lint:prettier -- --write",
    "fix": "run-p fix:*",
    "lint:eslint": "eslint --ext js,ts .",
    "lint:prettier": "prettier -l \"**/*.{json,md,yml,yaml}\"",
    "lint:type": "tsc --noEmit",
    "lint": "run-p lint:*",
    "test:name:splitCommand": ".\\scripts\\Test ChildProcess -t splitCommand$",
    "test:name:exec_dosCommand": ".\\scripts\\Test ChildProcess -t exec_dosCommand$",
    "test:name:exec_dosCommand_runsAdminTrue": ".\\scripts\\Test ChildProcess -t exec_dosCommand_runsAdminTrue$",
    "test:name:exec_exeFile": ".\\scripts\\Test ChildProcess -t exec_exeFile$",
    "test:name:exec_exeFile_runsAdminFalse": ".\\scripts\\Test ChildProcess -t exec_exeFile_runsAdminFalse$",
    "test:name:execFile_dosCommand": ".\\scripts\\Test ChildProcess -t execFile_dosCommand$",
    "test:name:execFile_exeFile_activeDef": ".\\scripts\\Test ChildProcess -t execFile_exeFile_activeDef$",
    "test:name:execFile_exeFile_hidden": ".\\scripts\\Test ChildProcess -t execFile_exeFile_hidden$",
    "test:name:execFile_exeFile_runsAdminTrue": ".\\scripts\\Test ChildProcess -t execFile_exeFile_runsAdminTrue$",
    "test:name:execSync_dosCommand": ".\\scripts\\Test ChildProcess -t execSync_dosCommand$",
    "test:name:execSync_exeFile": ".\\scripts\\Test ChildProcess -t execSync_exeFile$",
    "test:name:execSync_runsAdminTrue": ".\\scripts\\Test ChildProcess -t execSync_runsAdminTrue$",
    "test:name:execSync_exeFile_runsAdminFalse": ".\\scripts\\Test ChildProcess -t execSync_exeFile_runsAdminFalse$",
    "test:name:execFileSync_exeFile": ".\\scripts\\Test ChildProcess -t execFileSync_exeFile$",
    "test:name:spawnSync": ".\\scripts\\Test ChildProcess -t spawnSync$",
    "test:name:execFileViaJSON": ".\\scripts\\Test ChildProcess -t execFileViaJSON$",
    "test:name:isRunningAsAdmin": ".\\scripts\\Test ChildProcess -t isRunningAsAdmin$",
    "test:name:writeProcessPropsToJson": ".\\scripts\\Test ChildProcess -t writeProcessPropsToJson$",
    "test:name:registerTaskForExecutingHighWIL": ".\\scripts\\Test ChildProcess -t registerTaskForExecutingHighWIL$",
    "test:name:setExePath": ".\\scripts\\Test ChildProcess -t setExePath$",
    "test:ChildProcess": ".\\scripts\\Test ChildProcess",
    "build": "wsh-packager bundle ./Package.wsf",
    "test:dist:module": ".\\scripts\\Test dist:module",
    "test:dist:bundle": ".\\scripts\\Test dist:bundle",
    "test": "run-s test:dist:*",
    "predocs": "rimraf ./docs",
    "docs:common": "jsdoc --configure ./jsdoc.json",
    "cp-docs-css": "cpy ./assets/styles/jsdoc.css ./docs/styles/",
    "cp-docs-img": "cpy ./assets/img/**/* ./docs/img/",
    "postdocs": "run-p cp-docs-*",
    "docs": "run-s docs:*",
    "up-build-doc": "run-s updateModules build docs"
  },
  "husky": {
    "hooks": {
      "pre-commit": "echo @FIXME \"npx lint-staged\" fixes all .js!"
    }
  },
  "lint-staged": {
    "*.{js}": "eslint --fix",
    "*.{json,css,md,yml,yaml}": "prettier --write"
  },
  "dependencies": {},
  "devDependencies": {
    "@tuckn/insert-gtag": "^1.1.0",
    "@tuckn/wsh-packager": "^1.0.0",
    "@types/activex-scripting": "^1.0.7",
    "@types/windows-script-host": "^5.8.3",
    "cpy-cli": "^4.1.0",
    "docdash": "^1.2.0",
    "eslint": "8.18.0",
    "eslint-config-prettier": "8.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jsdoc": "^39.3.3",
    "eslint-plugin-prettier": "4.0.0",
    "husky": "8.0.1",
    "jsdoc": "^3.6.10",
    "npm-run-all": "^4.1.5",
    "prettier": "2.7.1",
    "rimraf": "^3.0.2"
  }
}
